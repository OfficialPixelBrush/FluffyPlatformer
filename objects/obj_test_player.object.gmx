<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_test_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player Vars
// Player Horizontal Vars
spd = 0;
maxspd = 64;
acceleration = 8;

// Player Vertical Vars
vspd = 0;
maxvspd = 64;
vacceleration = 8;

// Bodge
slidetimer = 0;
slidetimer2 = 0;
jumping = false;
jumptimer = 0;
maxjumptimer = room_speed/4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Stop the sliding please.
slidetimer++;
if slidetimer &gt; 2 {
    if spd = 8 || (spd*(-1)) = -8 {
        spd = 0;
        slidetimer = 0;
    }
};


slidetimer2++;
if slidetimer2 &gt; room_speed/10 {
    if spd = 4 || (spd*(-1)) = -4 {
        spd = 0;
        slidetimer2 = 0;
    }
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Vertical
    
// Not exceed speed
if vspd &gt; maxvspd {
    vspd = maxvspd;
};

if vspd &lt; (maxvspd*(-1)) {
    vspd = (maxvspd*(-1));
};

// Falling
if (vspd &lt; maxvspd) vspd += vacceleration; 

// Vertical Collission
if (place_meeting(x,y+vspd,obj_solid))
{
while(!place_meeting(x,y+sign(vspd),obj_solid))
{
y += sign(vspd);
}
vspd = 0;
}
y+=vspd;

// Jumping
if (keyboard_check_pressed(vk_space)) &amp;&amp; (place_meeting(x+1,y,obj_solid)) || (keyboard_check_pressed(vk_space)) &amp;&amp; place_meeting(x-1,y,obj_solid)
{
    vspd -= vacceleration*2; 
};

if jumping = true {
    vspd-=vacceleration*4;
    jumptimer++;    
};

if jumptimer &gt;= maxjumptimer {
    jumping = false;
};
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Horizontal
// Add spd to X

if (place_meeting(x+spd,y,obj_solid))
{
while(!place_meeting(x+sign(spd),y,obj_solid))
{
x += sign(spd);
}
spd = 0;
}
x+=spd;

// Walking to the right
if (keyboard_check(ord("D"))) {
    if spd &lt; maxspd {    
        spd+=acceleration;
    }
} else if spd &gt; 0 {
        spd-=(acceleration*global.frict);
};

// Walking to the left
if (keyboard_check(ord("A"))) {
    if spd &gt; (maxspd*(-1)) {    
        spd+=(acceleration*(-1));
    }
} else if (spd*(-1)) &gt; 0 {
        spd+=(acceleration*global.frict);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()
draw_text_transformed(mouse_x+20, mouse_y+20, string(obj_test_player.spd) + "#" + string(obj_test_player.vspd) , 5, 5, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
